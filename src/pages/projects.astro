---
export const prerender = false;

// astro tools
import { getCollection } from "astro:content";
import { Icon } from "astro-icon/components";

// layout
import BaseLayout from "@/layouts/BaseLayout.astro";

// components
import Hero from "@/components/projects/Hero.astro";
import ContactForm from "@/components/ContactForm.astro";
import ProjectTile from "@/components/ui/ProjectTile.astro";
import getSearchParamAsArray from "@/lib/getSearchParamAsArray";

// collections
let projects = await getCollection("projects");
const allTools = await getCollection("tools");

const filterItems = getSearchParamAsArray(Astro.url, "tools");
// console.log(filterItems);

if (filterItems.length > 0) {
  projects = projects.filter((project) => {
    const projectTools = project.data.icons.map((t) => t.id);
    return filterItems.some((i) => projectTools.includes(i));
  });
}
---

<BaseLayout title="Projects Page" description="a page of projects">
  <Hero />
  <!-- filter -->
  <div class="container">
    <div class="filter-wrapper">
      <div class="columns">
        <p>Filter by tools:</p>
        {
          filterItems.length > 0 && (
            <button class="btn badge relative" aria-pressed="true">
              <Icon
                class="close"
                name="icon--close"
                aria-hidden="true"
                size={18}
              />
              <span>Clear All</span>
            </button>
          )
        }
      </div>
      <ul class="">
        {
          allTools.map((t) => (
            <li>
              <button
                class="btn badge relative"
                data-tool="t.id"
                aria-pressed={filterItems.includes(t.id)}>
                <span>{t.data.title}</span>
                {filterItems.includes(t.id) && (
                  <Icon
                    class="close"
                    name="icon--close"
                    aria-hidden="true"
                    size={18}
                  />
                )}
              </button>
            </li>
          ))
        }
      </ul>
    </div>

    <div class="grid-wrapper">
      {projects.map(({ data }) => <ProjectTile data={data} />)}
    </div>
  </div>
  <!-- grid of projects -->
  <ContactForm />
</BaseLayout>
